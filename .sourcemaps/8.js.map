{"version":3,"sources":["../../src/pages/add_customer/add_customer.module.ts","../../src/pages/tabs/tabs.ts","../../src/pages/add_customer/add_customer.ts"],"names":[],"mappings":"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","file":"8.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { AddCustomerPage } from './add_customer';\n\n@NgModule({\n  declarations: [\n    AddCustomerPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(AddCustomerPage),\n  ],\n  entryComponents: [AddCustomerPage]\n})\nexport class AddCustomerPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/add_customer/add_customer.module.ts","import { DashboardPage } from './../dashboard/dashboard';\nimport { Component } from '@angular/core';\nimport { OrdersPage } from '../orders/orders';\nimport { ProfilePage } from '../profile/profile';\nimport { NavController, NavParams, IonicPage } from 'ionic-angular';\n\n\n@IonicPage()\n@Component({\n  templateUrl: 'tabs.html'\n})\nexport class TabsPage {\n\n  tab1Root ='DashboardPage';\n  tab2Root = 'OrdersPage';\n  tab3Root = 'ProfilePage';   \n\n  myindex: number;\n\n  constructor(public navCtrl:NavController,public NavParams:NavParams) {\n    this.myindex =NavParams.data.tabindex\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { HttpResponse, HttpErrorResponse } from \"@angular/common/http\";\nimport { NgForm } from \"@angular/forms\";\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { Storage } from '@ionic/storage';\nimport { Network } from '@ionic-native/network';\nimport { TabsPage } from '../tabs/tabs';\nimport { AddCustomer } from '../../models/customer';\nimport { UtilProvider } from './../../providers/util/util';\nimport { CustomerService } from './../../providers/customer/customer'; \n\nconst CUSTOMERS = 'unsynced_customers';\n\n@IonicPage()\n@Component({\n  selector: 'add_customer',\n  templateUrl: 'add_customer.html',\n})\n\nexport class AddCustomerPage {\n\n  @ViewChild(\"addCustomerForm\") addCustomerForm: NgForm;\n  @ViewChild(\"internet_checker_indicator\") internetIndicator: ElementRef;\n  @ViewChild(\"customersCount\") customersCount: ElementRef;\n  indicator_classes: any = {\n    'onlinebg': false,\n    'offlinebg': false\n  };\n  user_id: any;\n  customers: any;\n  disableSyncButton: boolean = true;\n  sync_parameters: any;\n\n  constructor(\n    public navCtrl: NavController, \n    public navParams: NavParams,  \n    private utility: UtilProvider,\n    private customerService: CustomerService,\n    private storage: Storage, \n    private network: Network\n    ) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad AddCustomerPage yeh');\n    this.storage.get(\"user\").then((u) => {\n      this.user_id = u.data.id;\n    });\n    this.storage.get(CUSTOMERS).then((customers) => {\n      this.customers = customers;\n    });\n\n    this.sync_parameters = {};\n\n    // Continously Check for Internet\n    this.network.onConnect().subscribe(data => {\n      console.log(data);\n    }, error => console.error(error));\n   \n    this.network.onDisconnect().subscribe(data => {\n      console.log(data);\n    }, error => console.error(error));\n\n    setInterval(() => { \n      // The code that you want to run repeatedly\n      if (!navigator.onLine) {\n        this.indicator_classes.offlinebg = true;\n        this.indicator_classes.onlinebg = false;\n        this.internetIndicator.nativeElement.innerHTML = \"Offline\";\n\n      } else {\n        this.indicator_classes.offlinebg = false;\n        this.indicator_classes.onlinebg = true;\n        this.internetIndicator.nativeElement.innerHTML = \"Online\";\n      }\n    }, 2000);\n  }\n\n  ionViewDidEnter() {\n    console.log(\"entered\");\n    if (this.customers){\n      if (navigator.onLine) {\n        this.disableSyncButton = false;\n      }\n      this.customersCount.nativeElement.innerHTML = this.customers.length;\n    } else {\n      this.disableSyncButton = true;\n    }\n  }\n\n  goToTabsPage() {\n    this.navCtrl.setRoot(TabsPage)\n  }\n\n  displayNetworkUpdate(connectionState: string){\n    let networkType = this.network.type;\n    this.utility.showToast(`You are now ${connectionState} via ${networkType}`, 3000, 'toast-danger');\n  }\n\n  addCustomer(form: NgForm): Promise<any> {\n    var customerDetails: AddCustomer = {\n      name: form.value.name || \"\",\n      phone: form.value.phone || \"\",\n      email: form.value.email || \"\",\n      address: form.value.address || \"\",\n      user_id: \"\"\n    }\n    if (form.invalid) {\n      this.utility.showToast(\"Please fill form completely. You must fill Customer's email to submit\", 3000, 'toast-danger');\n      return;\n    }\n    var loading = this.utility.presentLoadingDefault(\"Adding Customer Details ...\");\n\n    console.log(\"new customer details:\" + JSON.stringify(customerDetails));\n\n    if (!navigator.onLine) {\n      console.log(\"there is no internet\");\n      this.storage.get(CUSTOMERS).then((customers) => {\n        if (customers) {\n          var new_data;\n          var old_data = [];\n          var data_duplicate = false;\n\n          customerDetails.user_id = this.user_id;\n          new_data = customerDetails;\n          old_data = customers;\n\n          console.log(\"Old data:\", old_data);\n          console.log(\"New data:\", new_data);\n\n          old_data.forEach((c) => {\n            console.log(\"Emails: \", c.email);\n            if(c.email === new_data.email){\n              data_duplicate = true;\n            }\n          })\n\n          if (data_duplicate === false) {\n            console.log('data stored');\n            old_data.push(new_data);\n            this.storage.set(CUSTOMERS, old_data);\n            this.navCtrl.push('AddCustomerPage');\n            this.utility.showAlert(\n              \"Success (No Internet)\",\n              \"Kindly Sync to Filterland Server when there is Internet\"\n            );\n          } else {\n            this.navCtrl.push('AddCustomerPage');\n            this.utility.showAlert(\n              \"Error\",\n              \"Customer already exist\"\n            );\n          }\n\n        } else {\n          customerDetails.user_id = this.user_id;\n          this.storage.set(CUSTOMERS, [customerDetails]);\n          this.navCtrl.push('AddCustomerPage');\n          this.utility.showAlert(\n            \"Success (No Internet)\",\n            \"Kindly Sync to Filterland Server when there is Internet\"\n          );\n        }\n      });\n      loading.dismiss();\n    }\n    else {\n      console.log(\"there is internet\");\n      customerDetails.user_id = this.user_id;\n      console.log(customerDetails)\n      this.customerService.addCustomer(customerDetails)\n        .subscribe(\n          //Success\n          (response: HttpResponse<any>) => {\n            if (!response.ok) {\n              loading.dismiss();\n              return this.utility.showAlert(\n                \"Error\",\n                \"There were problems sending data to server, try again please.\"\n              );\n            }\n            else if (response.body.status == \"error\"){\n              loading.dismiss();\n              return this.utility.showAlert(\n                \"Error\",\n                response.body.errors\n              );\n            }  \n            else if (response.body.body.status == \"success\"){\n              var customer_name = response.body.data.name\n              loading.dismiss();\n              return this.utility.showAlert(\n                \"Success\",\n                 customer_name + \" has been added to Filterland Server\"\n              );\n            }  \n            console.log(response);\n            loading.dismiss();\n          },\n          //Error\n          (error: HttpErrorResponse) => {\n            loading.dismiss();\n            console.log(error);\n            let message: string;\n            if(error.status === 500 || !error.error.errors){\n              message = \"There were problem, possible network or server errors, try again please.\";\n            }\n            else{\n              if(error.error.errors){\n                message = error.error.errors[0]\n              }\n            }\n            this.utility.showAlert( \"Error\", message );\n          },\n          //Complete error.error.errors[0] ||\n          () => {\n            console.log(\"Completed\");\n          }\n        );\n    }\n  }\n\n  syncFromStorageToServer() {\n    console.log(this.sync_parameters);\n    console.log(this.user_id);\n    console.log(this.customers);\n    this.sync_parameters.customers_array = this.customers;\n    // console.log(\"params: \", JSON.stringify(sync_parameters));\n    var loading = this.utility.presentLoadingDefault(\"Syncing Customers to Server ...\");\n    this.customerService.syncCustomersFromStorage(JSON.stringify(this.sync_parameters))\n      .subscribe(\n        (response: HttpResponse<any>) => {\n          if (!response.ok) {\n            let res: any;\n            res = response;\n            loading.dismiss();\n            // console.log(response);\n            this.storage.remove(CUSTOMERS);\n            this.navCtrl.push('AddCustomerPage');\n            return this.utility.showAlert(\n              \"Completed and Saved\",\n             res.saved\n            );\n          }\n          else {\n            let res: any;\n            res = response;\n            loading.dismiss();\n            this.storage.remove(CUSTOMERS);\n            this.navCtrl.push('AddCustomerPage');\n            return this.utility.showAlert(\n              \"Completed and saved:\",\n              res.saved\n            );\n          }  \n        },\n        (error: HttpErrorResponse) => {\n          loading.dismiss();\n            // console.log(error);\n            let message: string;\n            if(error.status === 500 || !error.error.errors){\n              message = \"There were problem, possible network or server errors, try again please.\";\n            }\n            else{\n              if(error.error.errors){\n                message = error.error.errors[0]\n              }\n            }\n            this.utility.showAlert( \"Error\", message );\n        },\n        () => {\n          console.log(\"Completed\");\n        }\n      );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/add_customer/add_customer.ts"],"sourceRoot":""}